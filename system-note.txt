Rules of each pilar for the application
	the store holds the state
	the procudures.js mutates the state of the store
	the helper.js does
		1. Offers an abstraction API by providing easy versions of methods
		from the root method of procedures.js
		2. Offers an API to queue system
		3. Offers an API to pane system
		4. Offers service and utilities
		helper.js is like the glue for the application to work
	vue files display's data

Compiled task remember
	a compiled task shouldn't have a direct access to procedures
	a compiled task should always be stateless if there is state it should be injected not possessed
	a compiled task should only return a task item

Rule of access and execution
	1. a pane or a vuew file will initiate helper.js for the purpose of usage listid below only 
		a. to use utility functions
		b. to get compiled task
		c. to run a compiled task
	2. helper.js should not access the store directly for mutation or even reading, except for the queue functions